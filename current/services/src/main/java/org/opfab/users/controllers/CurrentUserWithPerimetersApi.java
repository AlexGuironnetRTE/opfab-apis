/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.20).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.opfab.users.controllers;

import org.opfab.users.model.CurrentUserWithPerimeters;
import com.fasterxml.jackson.databind.ObjectMapper;
//import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
//import org.springframework.security.access.prepost.PreAuthorize;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Optional;

/**
 * the CurrentUserWithPerimeters API
 *
 * @author SWAGGER
 **/

//@Api(value = "CurrentUserWithPerimeters", description = "the CurrentUserWithPerimeters API")
@RequestMapping("/CurrentUserWithPerimeters")
public interface CurrentUserWithPerimetersApi {

    /**
     * <p>Get information about the user connected and his perimeters</p>
     * <p>Get information about the user connected and his perimeters.</p>
     * @return !AUTOGENERATED!
     * @throws Exception !AUTOGENERATED!
     **/
 /*   @ApiOperation(value = "Get information about the user connected and his perimeters", nickname = "fetchCurrentUserWithPerimeters", notes = "Get information about the user connected and his perimeters.", response = CurrentUserWithPerimeters.class, tags={ "users", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = CurrentUserWithPerimeters.class),
        @ApiResponse(code = 401, message = "Authentication required") })
    */
    //
    @RequestMapping(
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    //
    default CurrentUserWithPerimeters _fetchCurrentUserWithPerimeters(HttpServletRequest request, HttpServletResponse response)  throws Exception {
        return fetchCurrentUserWithPerimeters(request, response );
    }

    // Override this method
    /**
    * <p>Get information about the user connected and his perimeters</p>
    * <p>Get information about the user connected and his perimeters.</p>
        * @return !AUTOGENERATED!
    * @throws Exception !AUTOGENERATED!
    **/
    CurrentUserWithPerimeters fetchCurrentUserWithPerimeters(HttpServletRequest request, HttpServletResponse response) throws Exception;

}
